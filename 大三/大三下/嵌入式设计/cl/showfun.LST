C51 COMPILER V9.01   SHOWFUN                                                               06/19/2020 00:28:02 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SHOWFUN
OBJECT MODULE PLACED IN showfun.OBJ
COMPILER INVOKED BY: D:\keil4\C51\BIN\C51.EXE showfun.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          /************************************************************************************/
   3          /* LCM 240128 显示程序 */
   4          /* MCU 型号: Winbond W78E58-24 */
   5          /* 时钟频率: 22.1184 MHz */
   6          /* 接口方式: 直接接口（挂总线） */
   7          /* 开发环境: Keil C51 V6.14 */
   8          /* 开发日期: 2001.06.12- */
   9          /* 程序编写: Youth */
  10          /************************************************************************************/
  11          
  12          #include <stdarg.h>
  13          #include <stdio.h>
  14          #include <math.h>
  15          #include <intrins.h>
  16          #include <absacc.h>
  17          #include <string.h>
  18          #include <showfun.h>
  19          
  20          
  21          code uchar const uPowArr[] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  22          
  23          // ASCII 字模宽度及高度定义
  24          #define ASC_CHR_WIDTH 8
  25          #define ASC_CHR_HEIGHT 12
  26          #define HZ_CHR_HEIGHT 12
  27          #define HZ_CHR_WIDTH 12
  28          
  29          char code MSK1[]={0x00,0x01,0x03,0x07,0x0f,0x1f,0x3f,0x7f,0xff};
  30          char code MSK2[]={0x00,0x80,0xc0,0xe0,0xf0,0xf8,0xfc,0xfe,0xff};
  31          char code ASC_MSK[96*12] = {
  32          // Terminal9; 此字体下对应的点阵为：宽x高=8x12
  33          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0xff,0xff,0xff,0xff, // < 0x20时,打印此字
  34          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// ' '
  35          0x00,0x30,0x78,0x78,0x78,0x30,0x30,0x00,0x30,0x30,0x00,0x00,// '!'
  36          0x00,0x66,0x66,0x66,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// '"'
  37          0x00,0x6c,0x6c,0xfe,0x6c,0x6c,0x6c,0xfe,0x6c,0x6c,0x00,0x00,// '#'
  38          0x30,0x30,0x7c,0xc0,0xc0,0x78,0x0c,0x0c,0xf8,0x30,0x30,0x00,// '$'
  39          0x00,0x00,0x00,0xc4,0xcc,0x18,0x30,0x60,0xcc,0x8c,0x00,0x00,// '%'
  40          0x00,0x70,0xd8,0xd8,0x70,0xfa,0xde,0xcc,0xdc,0x76,0x00,0x00,// '&'
  41          0x00,0x30,0x30,0x30,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// '''
  42          0x00,0x0c,0x18,0x30,0x60,0x60,0x60,0x30,0x18,0x0c,0x00,0x00,// '('
  43          0x00,0x60,0x30,0x18,0x0c,0x0c,0x0c,0x18,0x30,0x60,0x00,0x00,// ')'
  44          0x00,0x00,0x00,0x66,0x3c,0xff,0x3c,0x66,0x00,0x00,0x00,0x00,// '*'
  45          0x00,0x00,0x00,0x18,0x18,0x7e,0x18,0x18,0x00,0x00,0x00,0x00,// '+'
  46          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x38,0x60,0x00,// ','
  47          0x00,0x00,0x00,0x00,0x00,0xfe,0x00,0x00,0x00,0x00,0x00,0x00,// '-'
  48          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x38,0x38,0x00,0x00,// '.'
  49          0x00,0x00,0x02,0x06,0x0c,0x18,0x30,0x60,0xc0,0x80,0x00,0x00,// '/'
  50          0x00,0x7c,0xc6,0xce,0xde,0xd6,0xf6,0xe6,0xc6,0x7c,0x00,0x00,// '0'
  51          0x00,0x10,0x30,0xf0,0x30,0x30,0x30,0x30,0x30,0xfc,0x00,0x00,// '1'
  52          0x00,0x78,0xcc,0xcc,0x0c,0x18,0x30,0x60,0xcc,0xfc,0x00,0x00,// '2'
  53          0x00,0x78,0xcc,0x0c,0x0c,0x38,0x0c,0x0c,0xcc,0x78,0x00,0x00,// '3'
  54          0x00,0x0c,0x1c,0x3c,0x6c,0xcc,0xfe,0x0c,0x0c,0x1e,0x00,0x00,// '4'
  55          0x00,0xfc,0xc0,0xc0,0xc0,0xf8,0x0c,0x0c,0xcc,0x78,0x00,0x00,// '5'
C51 COMPILER V9.01   SHOWFUN                                                               06/19/2020 00:28:02 PAGE 2   

  56          0x00,0x38,0x60,0xc0,0xc0,0xf8,0xcc,0xcc,0xcc,0x78,0x00,0x00,// '6'
  57          0x00,0xfe,0xc6,0xc6,0x06,0x0c,0x18,0x30,0x30,0x30,0x00,0x00,// '7'
  58          0x00,0x78,0xcc,0xcc,0xec,0x78,0xdc,0xcc,0xcc,0x78,0x00,0x00,// '8'
  59          0x00,0x78,0xcc,0xcc,0xcc,0x7c,0x18,0x18,0x30,0x70,0x00,0x00,// '9'
  60          0x00,0x00,0x00,0x38,0x38,0x00,0x00,0x38,0x38,0x00,0x00,0x00,// ':'
  61          0x00,0x00,0x00,0x38,0x38,0x00,0x00,0x38,0x38,0x18,0x30,0x00,// ';'
  62          0x00,0x0c,0x18,0x30,0x60,0xc0,0x60,0x30,0x18,0x0c,0x00,0x00,// '<'
  63          0x00,0x00,0x00,0x00,0x7e,0x00,0x7e,0x00,0x00,0x00,0x00,0x00,// '='
  64          0x00,0x60,0x30,0x18,0x0c,0x06,0x0c,0x18,0x30,0x60,0x00,0x00,// '>'
  65          0x00,0x78,0xcc,0x0c,0x18,0x30,0x30,0x00,0x30,0x30,0x00,0x00,// '?'
  66          0x00,0x7c,0xc6,0xc6,0xde,0xde,0xde,0xc0,0xc0,0x7c,0x00,0x00,// '@'
  67          0x00,0x30,0x78,0xcc,0xcc,0xcc,0xfc,0xcc,0xcc,0xcc,0x00,0x00,// 'A'
  68          0x00,0xfc,0x66,0x66,0x66,0x7c,0x66,0x66,0x66,0xfc,0x00,0x00,// 'B'
  69          0x00,0x3c,0x66,0xc6,0xc0,0xc0,0xc0,0xc6,0x66,0x3c,0x00,0x00,// 'C'
  70          0x00,0xf8,0x6c,0x66,0x66,0x66,0x66,0x66,0x6c,0xf8,0x00,0x00,// 'D'
  71          0x00,0xfe,0x62,0x60,0x64,0x7c,0x64,0x60,0x62,0xfe,0x00,0x00,// 'E'
  72          0x00,0xfe,0x66,0x62,0x64,0x7c,0x64,0x60,0x60,0xf0,0x00,0x00,// 'F'
  73          0x00,0x3c,0x66,0xc6,0xc0,0xc0,0xce,0xc6,0x66,0x3e,0x00,0x00,// 'G'
  74          0x00,0xcc,0xcc,0xcc,0xcc,0xfc,0xcc,0xcc,0xcc,0xcc,0x00,0x00,// 'H'
  75          0x00,0x78,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x78,0x00,0x00,// 'I'
  76          0x00,0x1e,0x0c,0x0c,0x0c,0x0c,0xcc,0xcc,0xcc,0x78,0x00,0x00,// 'J'
  77          0x00,0xe6,0x66,0x6c,0x6c,0x78,0x6c,0x6c,0x66,0xe6,0x00,0x00,// 'K'
  78          0x00,0xf0,0x60,0x60,0x60,0x60,0x62,0x66,0x66,0xfe,0x00,0x00,// 'L'
  79          0x00,0xc6,0xee,0xfe,0xfe,0xd6,0xc6,0xc6,0xc6,0xc6,0x00,0x00,// 'M'
  80          0x00,0xc6,0xc6,0xe6,0xf6,0xfe,0xde,0xce,0xc6,0xc6,0x00,0x00,// 'N'
  81          0x00,0x38,0x6c,0xc6,0xc6,0xc6,0xc6,0xc6,0x6c,0x38,0x00,0x00,// 'O'
  82          0x00,0xfc,0x66,0x66,0x66,0x7c,0x60,0x60,0x60,0xf0,0x00,0x00,// 'P'
  83          0x00,0x38,0x6c,0xc6,0xc6,0xc6,0xce,0xde,0x7c,0x0c,0x1e,0x00,// 'Q'
  84          0x00,0xfc,0x66,0x66,0x66,0x7c,0x6c,0x66,0x66,0xe6,0x00,0x00,// 'R'
  85          0x00,0x78,0xcc,0xcc,0xc0,0x70,0x18,0xcc,0xcc,0x78,0x00,0x00,// 'S'
  86          0x00,0xfc,0xb4,0x30,0x30,0x30,0x30,0x30,0x30,0x78,0x00,0x00,// 'T'
  87          0x00,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x78,0x00,0x00,// 'U'
  88          0x00,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0xcc,0x78,0x30,0x00,0x00,// 'V'
  89          0x00,0xc6,0xc6,0xc6,0xc6,0xd6,0xd6,0x6c,0x6c,0x6c,0x00,0x00,// 'W'
  90          0x00,0xcc,0xcc,0xcc,0x78,0x30,0x78,0xcc,0xcc,0xcc,0x00,0x00,// 'X'
  91          0x00,0xcc,0xcc,0xcc,0xcc,0x78,0x30,0x30,0x30,0x78,0x00,0x00,// 'Y'
  92          0x00,0xfe,0xce,0x98,0x18,0x30,0x60,0x62,0xc6,0xfe,0x00,0x00,// 'Z'
  93          0x00,0x3c,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x3c,0x00,0x00,// '['
  94          0x00,0x00,0x80,0xc0,0x60,0x30,0x18,0x0c,0x06,0x02,0x00,0x00,// '\'
  95          0x00,0x3c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x0c,0x3c,0x00,0x00,// ']'
  96          0x10,0x38,0x6c,0xc6,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// '^'
  97          0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff,0x00,// '_'
  98          0x30,0x30,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// '`'
  99          0x00,0x00,0x00,0x00,0x78,0x0c,0x7c,0xcc,0xcc,0x76,0x00,0x00,// 'a'
 100          0x00,0xe0,0x60,0x60,0x7c,0x66,0x66,0x66,0x66,0xdc,0x00,0x00,// 'b'
 101          0x00,0x00,0x00,0x00,0x78,0xcc,0xc0,0xc0,0xcc,0x78,0x00,0x00,// 'c'
 102          0x00,0x1c,0x0c,0x0c,0x7c,0xcc,0xcc,0xcc,0xcc,0x76,0x00,0x00,// 'd'
 103          0x00,0x00,0x00,0x00,0x78,0xcc,0xfc,0xc0,0xcc,0x78,0x00,0x00,// 'e'
 104          0x00,0x38,0x6c,0x60,0x60,0xf8,0x60,0x60,0x60,0xf0,0x00,0x00,// 'f'
 105          0x00,0x00,0x00,0x00,0x76,0xcc,0xcc,0xcc,0x7c,0x0c,0xcc,0x78,// 'g'
 106          0x00,0xe0,0x60,0x60,0x6c,0x76,0x66,0x66,0x66,0xe6,0x00,0x00,// 'h'
 107          0x00,0x18,0x18,0x00,0x78,0x18,0x18,0x18,0x18,0x7e,0x00,0x00,// 'i'
 108          0x00,0x0c,0x0c,0x00,0x3c,0x0c,0x0c,0x0c,0x0c,0xcc,0xcc,0x78,// 'j'
 109          0x00,0xe0,0x60,0x60,0x66,0x6c,0x78,0x6c,0x66,0xe6,0x00,0x00,// 'k'
 110          0x00,0x78,0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x7e,0x00,0x00,// 'l'
 111          0x00,0x00,0x00,0x00,0xfc,0xd6,0xd6,0xd6,0xd6,0xc6,0x00,0x00,// 'm'
 112          0x00,0x00,0x00,0x00,0xf8,0xcc,0xcc,0xcc,0xcc,0xcc,0x00,0x00,// 'n'
 113          0x00,0x00,0x00,0x00,0x78,0xcc,0xcc,0xcc,0xcc,0x78,0x00,0x00,// 'o'
 114          0x00,0x00,0x00,0x00,0xdc,0x66,0x66,0x66,0x66,0x7c,0x60,0xf0,// 'p'
 115          0x00,0x00,0x00,0x00,0x76,0xcc,0xcc,0xcc,0xcc,0x7c,0x0c,0x1e,// 'q'
 116          0x00,0x00,0x00,0x00,0xec,0x6e,0x76,0x60,0x60,0xf0,0x00,0x00,// 'r'
 117          0x00,0x00,0x00,0x00,0x78,0xcc,0x60,0x18,0xcc,0x78,0x00,0x00,// 's'
C51 COMPILER V9.01   SHOWFUN                                                               06/19/2020 00:28:02 PAGE 3   

 118          0x00,0x00,0x20,0x60,0xfc,0x60,0x60,0x60,0x6c,0x38,0x00,0x00,// 't'
 119          0x00,0x00,0x00,0x00,0xcc,0xcc,0xcc,0xcc,0xcc,0x76,0x00,0x00,// 'u'
 120          0x00,0x00,0x00,0x00,0xcc,0xcc,0xcc,0xcc,0x78,0x30,0x00,0x00,// 'v'
 121          0x00,0x00,0x00,0x00,0xc6,0xc6,0xd6,0xd6,0x6c,0x6c,0x00,0x00,// 'w'
 122          0x00,0x00,0x00,0x00,0xc6,0x6c,0x38,0x38,0x6c,0xc6,0x00,0x00,// 'x'
 123          0x00,0x00,0x00,0x00,0x66,0x66,0x66,0x66,0x3c,0x0c,0x18,0xf0,// 'y'
 124          0x00,0x00,0x00,0x00,0xfc,0x8c,0x18,0x60,0xc4,0xfc,0x00,0x00,// 'z'
 125          0x00,0x1c,0x30,0x30,0x60,0xc0,0x60,0x30,0x30,0x1c,0x00,0x00,// '{'
 126          0x00,0x18,0x18,0x18,0x18,0x00,0x18,0x18,0x18,0x18,0x00,0x00,// '|'
 127          0x00,0xe0,0x30,0x30,0x18,0x0c,0x18,0x30,0x30,0xe0,0x00,0x00,// '}'
 128          0x00,0x73,0xda,0xce,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// '~'
 129          };
 130          
 131          typedef struct typFNT_GB16 // 汉字字模显示数据结构
 132          {
 133          char Index[2];
 134          char Msk[24];
 135          };
 136          struct typFNT_GB16 code GB_16[] = { // 显示为12*12
 137          "中",0x04,0x00,0x04,0x00,0x7F,0xC0,0x44,0x40,0x44,0x40,0x44,0x40,0x7F,0xC0,0x04,0x00,0x04,0x00,0x04,0x00,0
             -x04,0x00,0x00,0x00,
 138          "文",0x08,0x00,0x04,0x40,0xFF,0xE0,0x11,0x00,0x11,0x00,0x11,0x00,0x0A,0x00,0x0A,0x00,0x04,0x00,0x1B,0x00,0
             -xE0,0xE0,0x00,0x00,
 139          "测",0x9E,0x20,0x52,0x20,0x12,0xA0,0x96,0xA0,0x56,0xA0,0x56,0xA0,0x56,0xA0,0xD6,0xA0,0x44,0xA0,0x4A,0x20,0
             -x71,0x60,0x00,0x00,
 140          "试",0x80,0xC0,0x40,0xA0,0x5F,0xE0,0x00,0x80,0xC0,0x80,0x4F,0x80,0x44,0x80,0x44,0x80,0x57,0xA0,0x6C,0x60,0
             -x40,0x20,0x00,0x00,
 141          "液",0x81,0x00,0x5F,0xE0,0x25,0x00,0x85,0xC0,0xAA,0x40,0x4E,0xC0,0x5A,0x40,0x49,0x80,0xC8,0x80,0x49,0x40,0
             -x4E,0x20,0x00,0x00,
 142          "晶",0x1F,0x80,0x10,0x80,0x1F,0x80,0x10,0x80,0x1F,0x80,0x00,0x00,0x7B,0xE0,0x4A,0x20,0x7B,0xE0,0x4A,0x20,0
             -x7B,0xE0,0x00,0x00,
 143          "显",0x3F,0x80,0x20,0x80,0x3F,0x80,0x20,0x80,0x3F,0x80,0x00,0x00,0x4A,0x40,0x2A,0x40,0x2A,0x80,0x0B,0x00,0
             -xFF,0xE0,0x00,0x00,
 144          "示",0x00,0x80,0x7F,0xC0,0x00,0x00,0x00,0x00,0xFF,0xE0,0x04,0x00,0x14,0x80,0x24,0x40,0x44,0x20,0x84,0x20,0
             -x1C,0x00,0x00,0x00,
 145          "键",0x41,0x00,0x7F,0xC0,0x89,0x40,0xEB,0xE0,0x5D,0x40,0x47,0xC0,0xF5,0x00,0x57,0xE0,0x49,0x00,0x6D,0x00,0
             -x53,0xE0,0x00,0x00,
 146          "盘",0x08,0x00,0x3F,0x80,0x24,0x80,0xFF,0xE0,0x28,0x80,0x25,0x80,0x40,0x00,0xBF,0xC0,0x2A,0x40,0x2A,0x40,0
             -xFF,0xE0,0x00,0x00,
 147          "按",0x21,0x00,0x2F,0xE0,0xF8,0x20,0x22,0x00,0x32,0x00,0x6F,0xE0,0xA4,0x40,0x24,0x80,0x23,0x80,0x21,0x40,0
             -xEE,0x20,0x00,0x00,
 148          "点",0x04,0x00,0x07,0xC0,0x04,0x00,0x04,0x00,0x3F,0x80,0x20,0x80,0x20,0x80,0x3F,0x80,0x00,0x00,0x49,0x40,0
             -xC9,0x20,0x00,0x00,
 149          "定",0x04,0x00,0x7F,0xE0,0xC0,0x20,0x00,0x00,0x7F,0xC0,0x04,0x00,0x24,0x00,0x27,0xC0,0x34,0x00,0x4C,0x00,0
             -x83,0xE0,0x00,0x00,
 150          "位",0x24,0x00,0x22,0x00,0x5F,0xE0,0x40,0x00,0xC8,0x80,0x48,0x80,0x44,0x80,0x45,0x00,0x45,0x00,0x41,0x00,0
             -x5F,0xE0,0x00,0x00,
 151          "直",0x04,0x00,0xFF,0xE0,0x04,0x00,0x3F,0x80,0x20,0x80,0x20,0x80,0x3F,0x80,0x20,0x80,0x3F,0x80,0x20,0x80,0
             -xFF,0xE0,0x00,0x00,
 152          "线",0x22,0x80,0x22,0x40,0x52,0x60,0x97,0x80,0xE2,0x60,0x4F,0x80,0xB2,0x40,0xC2,0x80,0x31,0x20,0xC6,0xA0,0
             -x18,0x60,0x00,0x00,
 153          "绘",0x21,0x00,0x21,0x00,0x52,0x80,0x94,0x40,0xEB,0xA0,0x20,0x00,0x5F,0xE0,0xE2,0x00,0x02,0x80,0xF4,0x40,0
             -x8F,0xE0,0x00,0x00,
 154          "制",0x10,0x20,0x54,0x20,0x7E,0xA0,0x90,0xA0,0xFE,0xA0,0x10,0xA0,0x7E,0xA0,0x52,0xA0,0x52,0x20,0x56,0x20,0
             -x10,0xE0,0x00,0x00,
 155          "图",0x7F,0xE0,0x48,0x20,0x5F,0x20,0x6A,0x20,0x44,0x20,0x4A,0x20,0x75,0xA0,0x42,0x20,0x4C,0x20,0x42,0x20,0
             -x7F,0xE0,0x00,0x00,
 156          "片",0x22,0x00,0x22,0x00,0x22,0x00,0x3F,0xE0,0x20,0x00,0x20,0x00,0x3F,0x00,0x21,0x00,0x21,0x00,0x41,0x00,0
             -x81,0x00,0x00,0x00,
 157          "绘",0x21,0x00,0x21,0x00,0x52,0x80,0x94,0x40,0xEB,0xA0,0x20,0x00,0x5F,0xE0,0xE2,0x00,0x02,0x80,0xF4,0x40,0
             -x8F,0xE0,0x00,0x00,
 158          "制",0x10,0x20,0x54,0x20,0x7E,0xA0,0x90,0xA0,0xFE,0xA0,0x10,0xA0,0x7E,0xA0,0x52,0xA0,0x52,0x20,0x56,0x20,0
C51 COMPILER V9.01   SHOWFUN                                                               06/19/2020 00:28:02 PAGE 4   

             -x10,0xE0,0x00,0x00,
 159          
 160          "流",0x82,0x00,0x5F,0xE0,0x42,0x00,0x04,0x80,0xAF,0xC0,0x60,0x40,0x2A,0x80,0x4A,0x80,0xCA,0xA0,0x52,0xA0,0
             -x62,0xE0,0x00,0x00,
 161          "电",0x04,0x00,0x04,0x40,0x7F,0xE0,0x44,0x40,0x7F,0xC0,0x44,0x40,0x44,0x40,0x7F,0xC0,0x44,0x00,0x04,0x20,0
             -x03,0xE0,0x00,0x00,
 162          "机",0x20,0x80,0x27,0xC0,0xFC,0x80,0x24,0x80,0x24,0x80,0x74,0x80,0x6C,0x80,0xA4,0x80,0xA4,0xA0,0x28,0xA0,0
             -x30,0xE0,0x00,0x00,
 163          "加",0x20,0x00,0x20,0x00,0xFD,0xE0,0x25,0x20,0x25,0x20,0x25,0x20,0x25,0x20,0x25,0x20,0x45,0x20,0x45,0xE0,0
             -x99,0x20,0x00,0x00,
 164          "减",0x81,0x40,0x41,0x40,0x5F,0xE0,0x11,0x00,0x5F,0x20,0x51,0x20,0x9F,0x40,0x9A,0x80,0xAE,0xA0,0xA9,0x60,0
             -x42,0x20,0x00,0x00,
 165          "速",0x82,0x00,0x5F,0xE0,0x42,0x00,0x0F,0xC0,0xCA,0x40,0x4F,0xC0,0x43,0x00,0x46,0x80,0x5A,0x40,0xA2,0x00,0
             -x9F,0xE0,0x00,0x00,
 166          "及",0x7F,0x80,0x10,0x80,0x11,0x00,0x11,0x00,0x19,0xC0,0x14,0x40,0x14,0x80,0x23,0x00,0x23,0x00,0x4C,0x80,0
             -xB0,0x60,0x00,0x00,
 167          
 168          "系",0x03,0xC0,0x7C,0x00,0x08,0x80,0x3F,0x00,0x04,0x00,0x08,0x80,0x3F,0xC0,0x15,0x00,0x24,0x80,0x44,0x40,0
             -x9C,0x20,0x00,0x00,
 169          "统",0x21,0x00,0x27,0xE0,0x51,0x00,0xF2,0x00,0x24,0x40,0x47,0xE0,0xF2,0x80,0x02,0x80,0x32,0xA0,0xC4,0xA0,0
             -x18,0xE0,0x00,0x00,
 170          "步",0x04,0x00,0x27,0xC0,0x24,0x00,0x24,0x00,0xFF,0xE0,0x04,0x00,0x14,0x40,0x24,0x80,0x41,0x00,0x06,0x00,0
             -x78,0x00,0x00,0x00,
 171          "长",0x20,0x80,0x21,0x00,0x22,0x00,0x24,0x00,0x28,0x00,0xFF,0xE0,0x24,0x00,0x22,0x00,0x21,0x00,0x2C,0x80,0
             -x30,0x60,0x00,0x00,
 172          "顺",0x57,0xE0,0x51,0x00,0x57,0xE0,0x54,0x20,0x55,0x20,0x55,0x20,0x55,0x20,0x55,0x20,0x51,0x80,0x92,0x40,0
             -x8C,0x20,0x00,0x00,
 173          "时",0x00,0x80,0xF0,0x80,0x9F,0xE0,0x90,0x80,0x94,0x80,0xF2,0x80,0x92,0x80,0x90,0x80,0xF0,0x80,0x90,0x80,0
             -x03,0x80,0x00,0x00,
 174          "针",0x41,0x00,0x41,0x00,0x79,0x00,0x81,0x00,0xF7,0xE0,0x21,0x00,0xF9,0x00,0x21,0x00,0x29,0x00,0x31,0x00,0
             -x21,0x00,0x00,0x00,
 175          "旋",0x42,0x00,0x23,0xE0,0xF4,0x00,0x4F,0xE0,0x71,0x20,0x55,0x40,0x55,0x00,0x55,0xE0,0x55,0x00,0xB7,0x00,0
             -x89,0xE0,0x00,0x00,
 176          "转",0x21,0x00,0xF9,0x00,0x47,0xE0,0x61,0x00,0xA7,0xE0,0xFA,0x00,0x23,0xC0,0x38,0x40,0xE0,0x80,0x23,0x00,0
             -x20,0x80,0x00,0x00,
 177          "逆",0x84,0x40,0x42,0x80,0x5F,0xE0,0x01,0x00,0xC9,0x40,0x49,0x40,0x4F,0xC0,0x42,0x00,0x44,0x00,0xA8,0x00,0
             -x9F,0xE0,0x00,0x00,
 178          
 179          //"旋",0x42,0x00,0x23,0xE0,0xF4,0x00,0x4F,0xE0,0x71,0x20,0x55,0x40,0x55,0x00,0x55,0xE0,0x55,0x00,0xB7,0x00
             -,0x89,0xE0,0x00,0x00,
 180          //"转",0x21,0x00,0xF9,0x00,0x47,0xE0,0x61,0x00,0xA7,0xE0,0xFA,0x00,0x23,0xC0,0x38,0x40,0xE0,0x80,0x23,0x00
             -,0x20,0x80,0x00,0x00,
 181          "方",0x04,0x00,0x02,0x40,0xFF,0xE0,0x08,0x00,0x0F,0x80,0x08,0x80,0x08,0x80,0x10,0x80,0x10,0x80,0x20,0x80,0
             -xC7,0x00,0x00,0x00,
 182          "向",0x04,0x00,0x08,0x40,0x7F,0xE0,0x40,0x40,0x5F,0x40,0x51,0x40,0x51,0x40,0x5F,0x40,0x40,0x40,0x40,0x40,0
             -x41,0xC0,0x00,0x00,
 183          
 184          //"时",
 185          //"针",
 186          };
 187          
 188          uchar gCurRow,gCurCol;                                                                  // 图形当前行、列存储，行高16点，列宽8点
 189          uchar tCurRow,tCurCol;                                                                  // 文本当前行、列存储，行高8点 ，列宽8点
 190          uchar ShowModeSW;                                                                               // 当前显示模式
 191          uint txthome,grhome;
 192          
 193          /******************************************************************************/ 
 194          uchar fnST01();                                                                                 // 状态位STA1,STA0判断（读写指令和读写数据）
 195          uchar fnST2();                                                                                  // 状态位ST2判断（数据自动读状态）
 196          uchar fnST3();                                                                                  // 状态位ST3判断（数据自动写状态）
 197          uchar fnST6();                                                                                  // 状态位ST6判断（屏读/屏拷贝状态）
 198          uchar fnPR1(uchar uCmd,uchar uPar1,uchar uPar2);                // 写双参数的指令
C51 COMPILER V9.01   SHOWFUN                                                               06/19/2020 00:28:02 PAGE 5   

 199          uchar fnPR11(uchar uCmd,uchar uPar1);                                   // 写单参数的指令
 200          uchar fnPR12(uchar uCmd);                                                               // 写无参数的指令
 201          uchar fnPR13(uchar uData);                                                              // 写数据
 202          uchar fnPR2();                                                                                  // 读数据
 203          void fnSetPos(uchar urow, uchar ucol);                                  // 设置当前地址
 204          void at(unsigned char x,unsigned char y);                               // 设定文本x,y值
 205          void cls();                                                                                             // 清屏
 206          char fnLCMInit();                                                                               // LCM 初始化
 207          uchar dprintf(uchar x,uchar y,char *fmt);                               // ASCII(8*16) 及 汉字(16*16) 显示函数
 208          void OutToLCD(uchar Dat,uchar x,uchar y);                               //显示辅助函数 
 209          
 210          
 211          uchar fnST01(void) // 状态位STA1,STA0判断（读写指令和读写数据）
 212          {
 213   1              uchar i;
 214   1              
 215   1              for(i=10;i>0;i--)
 216   1              {
 217   2                      if((LCMCW & 0x03) == 0x03)
 218   2                      break;
 219   2              }
 220   1              return i; // 若返回零，说明错误
 221   1      }
 222          
 223          uchar fnST2(void) // 状态位ST2判断（数据自动读状态）
 224          {
 225   1              uchar i;
 226   1              
 227   1              for(i=10;i>0;i--)
 228   1              {
 229   2                      if((LCMCW & 0x04) == 0x04)
 230   2                      break;
 231   2              }
 232   1              return i; // 若返回零，说明错误
 233   1      }
 234          
 235          uchar fnST3(void) // 状态位ST3判断（数据自动写状态）
 236          {
 237   1              uchar i;
 238   1              
 239   1              for(i=10;i>0;i--)
 240   1              {
 241   2                      if((LCMCW & 0x08) == 0x08)
 242   2                      break;
 243   2              }
 244   1              return i; // 若返回零，说明错误
 245   1      }
 246          
 247          uchar fnST6(void) // 状态位ST6判断（屏读/屏拷贝状态）
 248          {
 249   1              uchar i;
 250   1              
 251   1              for(i=10;i>0;i--)
 252   1              {
 253   2                      if((LCMCW & 0x40) == 0x40)
 254   2                      break;
 255   2              }
 256   1              return i; // 若返回零，说明错误
 257   1      }
 258          
 259          uchar fnPR1(uchar uCmd,uchar uPar1,uchar uPar2) // 写双参数的指令
 260          {
C51 COMPILER V9.01   SHOWFUN                                                               06/19/2020 00:28:02 PAGE 6   

 261   1              if(fnST01() == 0)
 262   1              return 1;
 263   1              LCMDW = uPar1;
 264   1              if(fnST01() == 0)
 265   1              return 2;
 266   1              LCMDW = uPar2;
 267   1              if(fnST01() == 0)
 268   1              return 3;
 269   1              LCMCW = uCmd;
 270   1              return 0; // 返回0成功
 271   1      }
 272          
 273          uchar fnPR11(uchar uCmd,uchar uPar1) // 写单参数的指令
 274          {
 275   1              if(fnST01() == 0)
 276   1              return 1;
 277   1              LCMDW = uPar1;
 278   1              if(fnST01() == 0)
 279   1              return 2;
 280   1              LCMCW = uCmd;
 281   1              return 0; // 返回0成功
 282   1      }
 283          
 284          uchar fnPR12(uchar uCmd) // 写无参数的指令
 285          {
 286   1              if(fnST01() == 0)
 287   1              return 1;
 288   1              LCMCW = uCmd;
 289   1              return 0; // 返回0成功
 290   1      }
 291          
 292          uchar fnPR13(uchar uData) // 写数据
 293          {
 294   1              if(fnST3() == 0)
 295   1              return 1;
 296   1              LCMDW = uData;
 297   1              return 0; // 返回0成功
 298   1      }
 299          
 300          uchar fnPR2(void) // 读数据
 301          {
 302   1              if(fnST01() == 0)
 303   1              return 1;
 304   1              return LCMDW;
 305   1      }
 306          
 307          
 308          void fnSetPos(uchar urow, uchar ucol)   //设置当前地址
 309          {
 310   1              uint iPos;
 311   1              
 312   1              iPos = urow * 20 + ucol;
 313   1              fnPR1(LC_ADD_POS,iPos & 0xFF,iPos / 256);
 314   1              gCurRow = urow;
 315   1              gCurCol = ucol;
 316   1      }
 317          
 318          
 319          void at(unsigned char x,unsigned char y)/*设定文本x,y值*/
 320          {       
 321   1              uint iPos; //地址
 322   1              
C51 COMPILER V9.01   SHOWFUN                                                               06/19/2020 00:28:02 PAGE 7   

 323   1              iPos = x  + y* 20;
 324   1              fnPR1(LC_ADD_POS,iPos&0xff,iPos/256);
 325   1              tCurRow = x;
 326   1              tCurCol = y;
 327   1      }
 328          
 329          // 清屏
 330          void cls(void)
 331          {
 332   1              uint i;
 333   1              
 334   1              fnPR1(LC_ADD_POS,0x00,0x00); // 置地址指针
 335   1              fnPR12(LC_AUT_WR); // 自动写
 336   1              for(i=0;i<0x2000;i++)
 337   1              {
 338   2                      fnST3();
 339   2                      fnPR13(0x00); // 写数据
 340   2              }
 341   1              fnPR12(LC_AUT_OVR); // 自动写结束
 342   1              fnPR1(LC_ADD_POS,0x00,0x00); // 重置地址指针
 343   1              gCurRow = 0; // 置地址指针存储变量
 344   1              gCurCol = 0;
 345   1      }
 346          
 347          // LCM 初始化
 348          char fnLCMInit(void)
 349          {
 350   1              reset=0;
 351   1              reset=1;
 352   1              fnPR1(LC_TXT_STP,0x00,0x00); // 文本显示区首地址
 353   1              fnPR1(LC_TXT_WID,0x14,0x00); // 文本显示区宽度
 354   1              fnPR1(LC_GRH_STP,0x00,0x00); // 图形显示区首地址
 355   1              fnPR1(LC_GRH_WID,0x14,0x00); // 图形显示区宽度
 356   1              fnPR11(LC_CGR_POS,CGRAMSTART >> 11);
 357   1              fnPR12(LC_CUR_SHP | 0x01); // 光标形状
 358   1              fnPR12(LC_MOD_OR); // 显示方式设置
 359   1              fnPR12(LC_DIS_SW |0x08);
 360   1              grhome = GRSTART;
 361   1          txthome = TXTSTART;
 362   1      
 363   1              return 0;
 364   1      }
 365          
 366          
 367          
 368          uchar dprintf(uchar x,uchar y,char *fmt)
 369          {
 370   1              char c1,c2,cData;
 371   1              uchar i=0,j,uLen;
 372   1              uchar k;
 373   1              
 374   1              uLen=strlen(fmt);
 375   1      
 376   1              while(i<uLen)
 377   1              {
 378   2                      c1 = fmt[i];
 379   2                      c2 = fmt[i+1];
 380   2                      
 381   2                      fnSetPos(y,x/8);
 382   2                      if(c1 >= 0)
 383   2                      {
 384   3                       // ASCII
C51 COMPILER V9.01   SHOWFUN                                                               06/19/2020 00:28:02 PAGE 8   

 385   3                          if(c1 < 0x20)
 386   3                          {
 387   4                              switch(c1)
 388   4                              {
 389   5                                  case CR:
 390   5                                  case LF: // 回车或换行
 391   5                                      i++;
 392   5                                                      x=0;
 393   5                                      if(y < 112)y+=HZ_CHR_HEIGHT;
 394   5                                      continue;
 395   5                                  case BS: // 退格
 396   5                                                      i++;
 397   5                                      if(y>ASC_CHR_WIDTH)y-=ASC_CHR_WIDTH;
 398   5                                      cData = 0x00;
 399   5                                      break;
 400   5                              }
 401   4                          } 
 402   3                          for(j=0;j<ASC_CHR_HEIGHT;j++)
 403   3                          {
 404   4                              
 405   4                              if(c1 >= 0x1f)
 406   4                              {
 407   5                                              cData= ASC_MSK[(c1-0x1f)*ASC_CHR_HEIGHT+j];
 408   5                                              fnSetPos(y+j,x/8);
 409   5                                              if((x%8)==0)
 410   5                                              {
 411   6                                                      fnPR12(LC_AUT_WR); // 写数据
 412   6                                              fnPR13(cData);  
 413   6                                              fnPR12(LC_AUT_OVR);
 414   6                                              }
 415   5                                              else
 416   5                                                      OutToLCD(cData,x,y+j);
 417   5                              }
 418   4                              fnSetPos(y+j,x/8);
 419   4                          }
 420   3                          if(c1 != BS) // 非退格
 421   3                          x+=ASC_CHR_WIDTH;
 422   3                      }
 423   2                      else
 424   2                      { // 中文
 425   3                              
 426   3                          for(j=0;j<sizeof(GB_16)/sizeof(GB_16[0]);j++)
 427   3                          {
 428   4                              if(c1 == GB_16[j].Index[0] && c2 == GB_16[j].Index[1])
 429   4                              break;
 430   4                          }
 431   3                          for(k=0;k<HZ_CHR_HEIGHT;k++)
 432   3                          {
 433   4                                      
 434   4                              fnSetPos(y+k,x/8);
 435   4                              if(j < sizeof(GB_16)/sizeof(GB_16[0]))
 436   4                              {
 437   5                                              c1=GB_16[j].Msk[k*2];
 438   5                                              c2=GB_16[j].Msk[k*2+1];
 439   5                                      }
 440   4                                      else       
 441   4                                              c1=c2=0;
 442   4                                      if((x%8)==0)
 443   4                                      {
 444   5                                              fnPR12(LC_AUT_WR);
 445   5                                              fnPR13(c1);
 446   5                                      fnPR12(LC_AUT_OVR);
C51 COMPILER V9.01   SHOWFUN                                                               06/19/2020 00:28:02 PAGE 9   

 447   5                              }
 448   4                                      else
 449   4                                              OutToLCD(c1,x,y+k);
 450   4                                      
 451   4                                      if(((x+2+HZ_CHR_WIDTH/2)%8)==0)
 452   4                                      {
 453   5                                              fnPR12(LC_AUT_WR);
 454   5                                              fnPR13(c2);
 455   5                                              fnPR12(LC_AUT_OVR);
 456   5                              }
 457   4                                      else
 458   4                                              OutToLCD(c2,x+2+HZ_CHR_WIDTH/2,y+k);
 459   4                          }
 460   3                          x+=HZ_CHR_WIDTH;
 461   3                          i++;
 462   3                      }  
 463   2                      i++;
 464   2              }
 465   1              return uLen;
 466   1      }
 467          
 468          
 469          void OutToLCD(uchar Dat,uchar x,uchar y) 
 470          {
 471   1              uchar uData1,uData2,ux,a,b;
 472   1      
 473   1              a=8-(x%8);b=x%8;
 474   1              fnSetPos(y,x/8);
 475   1              fnPR12(LC_AUT_RD); // 读数据
 476   1              uData1=fnPR2();
 477   1              uData2=fnPR2();
 478   1              fnPR12(LC_AUT_OVR);
 479   1              fnSetPos(y,x/8);
 480   1              uData1&=~MSK1[a];
 481   1              ux=Dat&MSK2[a];
 482   1              ux>>=b;
 483   1              uData1=uData1|ux;
 484   1              ux=~MSK2[b];
 485   1              uData2&=ux;
 486   1              ux=MSK1[b];
 487   1              ux=Dat&ux;
 488   1              ux<<=a;
 489   1              uData2=uData2|ux;
 490   1              fnPR12(LC_AUT_WR); // 写数据
 491   1              fnPR13(uData1); 
 492   1              fnPR13(uData2);
 493   1              fnPR12(LC_AUT_OVR);
 494   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    999    ----
   CONSTANT SIZE    =   2244    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
